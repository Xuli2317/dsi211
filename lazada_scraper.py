from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.chrome.options import Options
from webdriver_manager.chrome import ChromeDriverManager
from selenium.webdriver.chrome.service import Service
import time
import csv

# ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ Chrome
options = Options()
options.add_argument('--start-maximized')

service = Service(ChromeDriverManager().install())
driver = webdriver.Chrome(service=service, options=options)

data = []

try:
    driver.get("https://www.lazada.co.th/")
    time.sleep(2)

    search = driver.find_element(By.CSS_SELECTOR, 'input[name="q"]')
    search.send_keys("‡πÇ‡∏¢‡πÄ‡∏Å‡∏¥‡∏£‡πå‡∏ï")
    search.submit()
    time.sleep(5)
    print("üîç ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏Ñ‡∏≥‡∏ß‡πà‡∏≤ '‡πÇ‡∏¢‡πÄ‡∏Å‡∏¥‡∏£‡πå‡∏ï'")

    # Scroll ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÇ‡∏´‡∏•‡∏î‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
    for _ in range(3):
        driver.execute_script("window.scrollBy(0, 1500);")
        time.sleep(2)

    # ‡∏î‡∏∂‡∏á‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏Å‡∏≤‡∏£‡πå‡∏î‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤
    cards = driver.find_elements(By.CSS_SELECTOR, 'div[data-qa-locator="product-item"]')
    print(f"üì¶ ‡∏û‡∏ö‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î {len(cards)} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£")

    # ‡πÄ‡∏Å‡πá‡∏ö‡∏•‡∏¥‡∏á‡∏Å‡πå‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤
    product_links = []
    for card in cards:
        try:
            link = card.find_element(By.CSS_SELECTOR, 'div.RfADt a').get_attribute('href')
            product_links.append(link)
        except:
            continue

    print(f"üîó ‡πÄ‡∏Å‡πá‡∏ö‡∏•‡∏¥‡∏á‡∏Å‡πå‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à {len(product_links)} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£")

    # ‡πÄ‡∏Ç‡πâ‡∏≤‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏•‡∏¥‡∏á‡∏Å‡πå‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
    for index, link in enumerate(product_links, 1):
        try:
            driver.get(link)
            print(f"\n‚û°Ô∏è [{index}] ‡πÄ‡∏Ç‡πâ‡∏≤‡πÑ‡∏õ‡∏¢‡∏±‡∏á: {link}")
            time.sleep(3)

            title = driver.find_element(By.CSS_SELECTOR, 'h1.pdp-mod-product-badge-title').text.strip()
            price = driver.find_element(By.CSS_SELECTOR, 'span.pdp-price.pdp-price_type_normal').text.strip()

            try:
                sales = driver.find_element(By.CSS_SELECTOR, 'div.pdp-product-highlights span').text.strip()
            except:
                sales = "‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏¢‡∏≠‡∏î‡∏Ç‡∏≤‡∏¢"

            data.append([title, price, sales])
        except Exception as e:
            print(f"‚ùå ‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏•‡∏¥‡∏á‡∏Å‡πå‡∏ó‡∏µ‡πà {index}: {e}")

finally:
    driver.quit()

# ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏•‡∏á CSV
with open('yogurt_data.csv', 'w', newline='', encoding='utf-8-sig') as f:
    writer = csv.writer(f)
    writer.writerow(['‡∏ä‡∏∑‡πà‡∏≠‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤', '‡∏£‡∏≤‡∏Ñ‡∏≤', '‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏¢‡∏≠‡∏î‡∏Ç‡∏≤‡∏¢'])
    writer.writerows(data)

print(f"\n‚úÖ ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢: yogurt_data.csv ({len(data)} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£)")
